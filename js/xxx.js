// 1.1 –°–æ–∑–¥–∞—ë—Ç—Å—è –∫–ª–∞—Å User.
// 1.2 –í –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∫–ª–∞—Å—Å–∞ User –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –∫–ª–∞—Å—Å–∞ User.

// 2.1 –°–æ–∑–¥–∞—ë—Ç—Å—è –∫–ª–∞—Å Avatar. –ß–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é extends –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ –∫ –∫–ª–∞—Å—Å—É User.
// 2.2 –í –∫–ª–∞—Å—Å–µ Avatar —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä  –∏ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É User –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –±—É–¥–µ—Ç —É User, –Ω–æ –±—É–¥—É—Ç —É Avatar. –î–æ–±–æ–≤–ª—è–µ–º –º–µ—Ç–æ–¥ attack –∫–ª–∞—Å—Å—É Avatar, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤ Avatar, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –≤ User. –¢–µ–ø–µ—Ä—å —É Avatar –µ—Å—Ç—å –≤—Å–µ —á—Ç–æ —É User –∏ + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –º–µ—Ç–æ–¥—ã  –ø—Ä–∏—Å—É—â–∏ Avatar.
// 2.3 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑—É–µ–º —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é (new) —ç–∫–∑–µ–º–ø–ª—è—Ä(test) –∫–ª–∞—Å—Å–∞ Avatar –∏ –≤ –Ω–µ–≥–æ –ø–µ—Ä–µ–¥–∞—ë–º —Å–≤–æ–π—Å—Ç–≤–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.

// 3.1 –°–æ–∑–¥–∞—ë—Ç—Å—è –∫–ª–∞—Å Zombi. –ß–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é extends –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ –∫ –∫–ª–∞—Å—Å—É User.
// 3.2 –í –∫–ª–∞—Å—Å–µ Zombi —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä  –∏ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É User –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –±—É–¥–µ—Ç —É User, –Ω–æ –±—É–¥—É—Ç —É Avatar. –î–æ–±–æ–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å—É Zombi, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏—Å—É—â–∏ –∫–ª–∞—Å—Å—É Zombi, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –≤ User. –¢–µ–ø–µ—Ä—å —É Zombi –µ—Å—Ç—å –≤—Å–µ —á—Ç–æ —É User –∏ + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –º–µ—Ç–æ–¥—ã  –ø—Ä–∏—Å—É—â–∏ Zombi.
// 3.3 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑—É–µ–º —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é (new) —ç–∫–∑–µ–º–ø–ª—è—Ä(test1) –∫–ª–∞—Å—Å–∞ Zombi –∏ –≤ –Ω–µ–≥–æ –ø–µ—Ä–µ–¥–∞—ë–º —Å–≤–æ–π—Å—Ç–≤–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.

// 4.1 –°–æ–∑–¥–∞—ë—Ç—Å—è –∫–ª–∞—Å Dog. –ß–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é extends –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ –∫ –∫–ª–∞—Å—Å—É Zombi.
// 4.2 –í –∫–ª–∞—Å—Å–µ Dog —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä  –∏ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É Zombi –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –±—É–¥–µ—Ç —É Zombi, –Ω–æ –±—É–¥—É—Ç —É Dog. –î–æ–±–æ–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å—É Dog, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏—Å—É—â–∏ –∫–ª–∞—Å—Å—É Dog, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –≤ Zombi. –¢–µ–ø–µ—Ä—å –∫–ª–∞—Å—Å Dog –µ—Å—Ç—å –≤—Å–µ —á—Ç–æ —É –∫–ª–∞—Å—Å–æ–≤ Zombi –∏ User, + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –º–µ—Ç–æ–¥—ã –ø—Ä–∏—Å—É—â–∏ Dog.
// 4.3 –ò–Ω–∏—Ü–∏–∞–ª–∏–∑—É–µ–º —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é (new) —ç–∫–∑–µ–º–ø–ª—è—Ä(test2) –∫–ª–∞—Å—Å–∞ Dog –∏ –≤ –Ω–µ–≥–æ –ø–µ—Ä–µ–¥–∞—ë–º —Å–≤–æ–π—Å—Ç–≤–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.

// –ò —Ç–∞–∫ –¥–µ–ª–µ–µ...!

// ----------------------
// –∫–ª–∞—Å—Å User.
class User {
  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ.
  static counter = 0;

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥. –ö–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ counter.
  static addUser() {
    // this.counter += 1;                            // –û–±—Ä–∞—à–µ–Ω–∏–µ (–≤–∞—Ä–∏–∞–Ω—Ç-1) —á–µ—Ä–µ–∑ this –∫ —Å–∞–º–æ–º—É –∫–ª–∞—Å—Å—É. this —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –∫–ª–∞—Å—Å.
    User.counter += 1; // –ò–ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ (–≤–∞—Ä–∏–∞–Ω—Ç-2) –∫ —Å–∞–º–æ–º—É –∫–ª–∞—Å—Å—É —é–∑–µ—Ä—É.
    console.log(`Number of users ${this.counter}`);
  }

  #location; // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –æ–≥–ª–∞—à–∞–µ–º –ø–µ—Ä–µ–¥ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º. –ü–µ—Ä–µ–¥ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Å–≤–æ–π—Å—Ç–≤–æ–º, —É–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ—à–µ—Ç–∫—É.

  // –ü–∞—Ç—Ç–µ—Ä–Ω "–û–±—ä–µ–∫—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤" —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é + –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è.
  constructor({ name, email, age = 18, location = 'World', password } = {}) {
    this.name = name;
    this.email = email;
    this.age = age;
    this.#location = location; // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ, —É–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ—à–µ—Ç–∫—É.
    this.password = password;
    User.addUser(); // –í—ã–∑–∞–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥.
  }
  sayHello() {
    console.log(this.name);
  }

  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥.
  #getEmail() {
    console.log(this.email);
  }

  // –ì–µ—Ç—Ç–µ—Ä
  get locale() {
    return this.#location;
  }

  // –°–µ—Ç—Ç–µ—Ä
  set locale(city) {
    const value = prompt('Enter password'); // –í—ã–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è.

    this.#getEmail(); // –í—ã–∑–æ–≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞. –í—ã–∑–æ–≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –º–µ—Ç–æ–¥–æ–≤. –í–Ω–µ –∫–ª–∞—Å—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.

    if (value === this.password) {
      //  –î–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
      this.#location = city;
      console.log(this.#location);
    } else {
      console.log('–•–∞—Ü–∫–µ—Ä ? üò±');
    }
  }
}
// –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å Avatar –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª–∞—Å—Å–∞ User.
// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤ –∫–ª–∞—Å—Å–µ Avatar, –Ω–æ –Ω–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ–± –æ–Ω –∑–∞—Ü–µ–ø–∏–ª –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤ –∫–ª–∞—Å—Å–µ User, –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ super(). –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ super() –¥–µ–ª–∞–µ—Ç –∫–æ–º—É–Ω–∏–∫–∞—Ü–∏—é –º–µ–∂–¥—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º –Æ–∑–µ—Ä–∞ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º –ê–≤–∞—Ç–∞—Ä–∞.
//
class Avatar extends User {
  constructor({ name, email, location, password, age, damage }) {
    super({ name, email, location, password, age }); // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ super –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
    this.damage = damage;
  }

  // –°–æ–∑–¥–∞—ë–º –º–µ—Ç–æ–¥ –¥–ª—è Avatar
  attack() {
    console.log(`Attack with damage ${this.damage}`);
  }
  // –¢–µ–ø–µ—Ä—å –ê–≤–∞—Ç–∞—Ä—É –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å—ë —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –Æ–∑–µ—Ä—É –∏ + —Å–≤–æ–π—Å—Ç–≤–æ damage, –∏ –º–µ—Ç–æ–¥ attack. –°–≤–æ–π—Å—Ç–≤–æ damage, –∏ –º–µ—Ç–æ–¥ attack –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã –Æ–∑–µ—Ä—É, –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ê–≤–∞—Ç–∞—Ä—É.
}

// –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å Zombi –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª–∞—Å—Å–∞ User.
class Zombi extends User {
  constructor({ name, email, location, password, age, poison }) {
    super({ name, email, location, password, age });
    this.poison = poison;
  }
  toBite() {
    console.log(`Bite with ${this.poison}`);
  }
}

// –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å Dog –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª–∞—Å—Å–∞ Zombi.
class Dog extends Zombi {
  constructor({ name, email, location, password, age, poison }) {
    super({ name, email, location, password, age });
  }
}
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Avatar
const test = new Avatar({
  name: 'User A',
  email: 'test@gmail.com',
  location: 'Lviv',
  password: 'qwerty111',
  damage: 700,
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Zombi
const test1 = new Zombi({
  name: 'User B',
  email: 'test@gmail.com',
  age: 99,
  poison: 500,
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Zombi
const test2 = new Dog({
  name: 'User C',
  email: 'gmail@gmail.com',
  age: 92,
});

console.log(test);
console.log(test1);
console.log(test2);

console.log(test.constructor.counter); // 3    // –û–±—Ä–∞—â–∞—é—Å—å –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–º—É—Å–≤–æ–π—Å—Ç–≤—É –∏–∑ –≤–Ω–µ –∏ –æ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ.

// test.#getEmail();                 // –û–®–ò–ë–ö–ê, –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ(–º–µ—Ç–æ–¥)! –°–≤–æ–π—Å—Ç–≤–æ "#getEmail" –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤–Ω–µ –∫–ª–∞—Å—Å–∞ "User", —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –∏–º–µ–µ—Ç –∑–∞–∫—Ä—ã—Ç—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä.

// test.sayHello();                    // User A

// console.log(test.locale);           // Lviv  // –û–±—Ä–∞—à–∞–µ–º—Å—è –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É —Å–≤–æ–π—Å—Ç–≤—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –¥–æ–±–∞–≤–∏–ª–∏ —Å–µ—Ç—Ç–µ—Ä —ç—Ç–æ–º—É –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É —Å–≤–æ–π—Å—Ç–≤—É.
// test.locale = 'Dnipro';             // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –°–µ—Ç—Ç–µ—Ä—É. –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ locale

// –ú–µ—Ç–æ–¥ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞, –∫–∞—Å—Ç–æ–º–Ω—ã–π. –ù–∞ –æ–±—ä–µ–∫—Ç–µ test1 —Å–æ–∑–¥–∞—é –º–µ—Ç–æ–¥ qwerty –∏ –Ω–∞ –Ω–µ–≥–æ –∑–∞–ø–∏—Å—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é.
// test1.qwerty = function () {
//   console.log(this.age);
// };

// console.log(test);                            // User {name: 'User A', email: 'test@gmail.com', age: 18, password: 'qwerty111', #location: 'Lviv'}
// console.log(test1);                           //User {name: 'User B', email: 'test@gmail.com', age: 99, password: undefined, #location: 'World'}

// console.log(test.#location);                  // –û–®–ò–ë–ö–ê, –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ! SyntaxError: Private field '#location' must be declared in an enclosing
